# =============================================
# MuStore Nginx Configuration
# =============================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Логирование
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;

    # Оптимизация
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Gzip сжатие
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types 
        text/plain 
        text/css 
        text/xml 
        text/javascript 
        application/json 
        application/javascript 
        application/xml+rss 
        application/rss+xml 
        application/atom+xml 
        application/xhtml+xml
        application/font-woff 
        application/font-woff2
        image/svg+xml;

    # Буферизация для проксирования
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # Основной сервер
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Безопасность
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        # Отключаем показ версии nginx
        server_tokens off;

        # Проксирование API запросов к backend на порт 3001
        location /api/ {
            proxy_pass http://backend:3001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Таймауты
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Буферизация
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
        }

        # Проксирование загруженных файлов
        location /uploads/ {
            proxy_pass http://backend:3001/uploads/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            
            # Кэширование изображений
            expires 30d;
            add_header Cache-Control "public, must-revalidate";
            
            # Обработка ошибок
            proxy_intercept_errors on;
            error_page 404 = @fallback_image;
        }

        # Fallback изображение для отсутствующих файлов
        location @fallback_image {
            return 302 /images/placeholder.jpg;
        }

        # Статические файлы frontend
        location / {
            try_files $uri $uri/ /index.html;
            
            # Кэширование HTML файлов
            location ~* \.html$ {
                expires 1h;
                add_header Cache-Control "public, must-revalidate";
            }
        }

        # Кэширование статических ресурсов
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # Обработка отсутствующих изображений
            try_files $uri /images/placeholder.jpg;
        }

        location ~* \.(css|js|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Специальная обработка для placeholder изображения
        location = /images/placeholder.jpg {
            expires 1d;
            add_header Cache-Control "public";
        }

        # Favicon
        location = /favicon.ico {
            log_not_found off;
            access_log off;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Robots.txt
        location = /robots.txt {
            log_not_found off;
            access_log off;
            expires 1d;
        }

        # Запрет доступа к скрытым файлам
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Запрет доступа к конфигурационным файлам
        location ~* \.(conf|htaccess|htpasswd|ini|log|sh|sql|tar|gz)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Health check endpoint
        location = /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Обработка ошибок
        error_page 404 /404.html;
        location = /404.html {
            internal;
            root /usr/share/nginx/html;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            internal;
            root /usr/share/nginx/html;
        }

        # Rate limiting для API
        location /api/auth/ {
            limit_req zone=auth burst=5 nodelay;
            proxy_pass http://backend:3001/api/auth/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
}